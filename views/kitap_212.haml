-# coding: UTF-8


%div.row
  %div.span10
    %h1 Slot'ların Çizilmesi
    %h3 
      Her slot bir canvas gibidir, boş bir yüzey çeşitli renkli şekiller ya da 
      gradientlerle kaplanır.
    %hr
    %h4 Çeviren : Ümit Kayacık
  %div.span2
    %form.form-search(action='/k_search' method='GET')
      %input(type="hidden" name="start" value="201")
      %input(type="hidden" name="end" value="238")
      %input.search-query(type="text" name="search_str" style="width: 70px;" placeholder="Ara")
      %button.btn(type="submit")
        %i.icon-search
    = haml :gs_sidebar
%div.row
  %div.span12
    %hr
    %p
      Birçok kullanılan şekil 
      %b oval 
      ve 
      %b rect 
      gibi metodlarla çizilir. Öncelikle çizimi yapacak fırçanın renklerini tayin 
      etmelisiniz.
    %p
      %b stroke 
      komutu çizgi rengini belirler ve 
      %b fill 
      komutu da çizgiler arasına doldurulacak rengi belirler.
    %br
    
    :coderay
      #!Ruby
      Shoes.app do
        stroke red
        fill blue
        oval top: 10, left: 10, radius: 100
      end
    %br
    
    %p
      Bu kod size etrafı kırmızı çizili bir mavi daire verir. Yüz piksel çapında ve 
      pencerenin sol üst köşesinin biraz güneydoğusuna yerleştirilir.
    %p
      Buradaki 
      %b red 
      ve 
      %b blue 
      metodları birze RGB array verir. Bu konuyu 
      %a(href="/kitap/210") renkler 
      sayfasında görmüştük. Renkleri nasıl kullanacağınızı bu bölümde 
      bulabilirsiniz.
    %br
    
    %h2 Processing ve NodeBox'tan Alınan İlham
    %p
      Çizim metodları nerdeyse aynen bir Python çizim aracı olan NodeBox'tan 
      gelir. Nodebox da bir çok fikrini grafik ve animasyon için yazılmış Java 
      benzeri bir dil olan Processing'den alır. Bu harika programların yaratıcılarına 
      çok şey borçluyum. 
    %p
      Green Shoes birkaç şeyi NodeBox ve Processing'den farklı yapar. 
      Örneğin, Green Shoes RGB array de kullanabileceğiniz 
      farklı renk metodlarına sahiptir. Aslında bunlar Processing'in renk 
      metodlarına çok benzer. Ayrıca Green Shoes çizilen şekillerin arkaplanında 
      resim veya gradyenler kullanmanıza da imkan verir. 
    %p
      Shoes ayrıca bazı animasyon fikirlerini de Processing'den almıştır. Geliştikçe 
      bu metodları kullanmayı artırmaktadır.
    %br
    
    %a(name="arc")
    %br
    %br
    %p
      %a.btn.btn-inverse(href="#arc" style="width: 100%;") 
        %big 
          %b arc(left, top, width, height, angle1, angle2) 
        » a Shoes::Oval
    %br
    
    %p
      Verilen koordinatlara (left, top) bir yay çizer (dairenin bir kısmı). Bu 
      metod size 
      %b :angle1 
      ve 
      %b :angle2 
      stilleri ile 
      %a(href="/kitap/212#oval") oval 
      metodundan biraz daha fazla kontrol sağlar. (Aslında 
      %b oval 
      metodu 
      %b :angle1 
      değeri 0  ve 
      %b :angle2 
      değeri 2*Math::PI olan bir arc'dır)
    %br
    
    :coderay
      #!Ruby
      Shoes.app do
        fill yellow..green
        stroke red..blue
        strokewidth 10
        cap :curve
        a = animate 12 do |i|
          @e.remove if @e
          r = i * (Math::PI * 0.01)
          @e = arc 100, 50, 180, 360, 0, r
          a.stop if r >= 2*Math::PI
        end
      end
      %br
      
    %a(name="arrow")
    %br
    %br
    %p
      %a.btn.btn-inverse(href="#arrow" style="width: 100%;") 
        %big 
          %b arrow(left, top, width) 
        » a Shoes::Shape
    %br
    
    %p
      

    
    
    
    
    
    





    %h3 Devam Edecek...

    %hr
    %a.btn.btn-large.btn-success.pull-left(href="/kitap/211")
      %i.icon-backward.icon-white 
      Slotlar
    %a.btn.btn-large.btn-success.pull-right(href="/kitap/213")
      Elemanlar
      %i.icon-forward.icon-white
